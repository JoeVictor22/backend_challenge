version: '3.3'

services:
  web-back:
    image: web-back:1.0
    ports:
      - "5000:8080"
    build:
      context: .
      dockerfile: ./backend_challenge/docker/backend/Dockerfile
    env_file:
      - ./backend_challenge/.dev.env
    volumes:
      - './backend_challenge:/web-back'
    depends_on:
      - postgres
    networks:
        - backend
        - frontend
    command: gunicorn --workers 10 --bind 0.0.0.0:8080 -m 007 wsgi:app


  web-front:
    image: web-front:1.0
    ports:
      - "3000:3000"
    build:
      context: .
      dockerfile: ./backend_challenge/docker/frontend/Dockerfile
    volumes:
      - './frontend_challenge:/web-front'
    env_file:
      - ./backend_challenge/.dev.env
    depends_on:
      - web-back
    networks:
      - frontend
    command: npm run start

  postgres:
    image: postgres:12.0-alpine
    ports:
      - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend_challenge/.dev.env
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USER
      POSTGRES_DB: $DB_NAME
    networks:
      - backend

volumes:
  postgres_data:

networks:
  frontend:
    name: frontend
  backend:
    name: backend