version: '3.3'

services:
  web-back:
    image: web-back:1.0
    ports:
      - "5000:8080"
    build:
      context: .
      dockerfile: ./backend_challenge/docker/backend/Dockerfile
    env_file:
      - .env
    volumes:
      - '.:/web-back'
    depends_on:
      - postgres
    command: gunicorn --workers 10 --bind 0.0.0.0:8080 -m 007 wsgi:app


  web-front:
    image: web-front:1.0
    ports:
      - "3000:3000"
    build:
      context: .
      dockerfile: ./backend_challenge/docker/frontend/Dockerfile
    env_file:
      - .env
    volumes:
      - '.:/web-front'
    depends_on:
      - web-back
    command: npm run start

  postgres:
    image: postgres:12.0-alpine
    volumes:
      - type: volume
        source: web-back_pgdata
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
      - type: bind
        source: ./backend_challenge/docker/postgres/postgresql.conf
        target: /etc/postgresql.conf
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USER
      POSTGRES_DB: $DB_NAME
    command: postgres -c config_file=/etc/postgresql.conf

volumes:
  web-back_pgdata: